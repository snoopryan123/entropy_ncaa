RACES[[1]] %>%
select(X2,X4,X5,X7)
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
rename(ML = X7)
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
rename(ML = X7)
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
mutate(ML_top = str_split(X7,"/")[1]) %>%
mutate(ML_bot = str_split(X7,"/")[2])
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
mutate(ML_top = str_split(X7,"/")[[1]]) %>%
mutate(ML_bot = str_split(X7,"/")[2])
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
mutate(ML_top = sapply(str_split(X7,"/"), function(x) x[[1]])) %>%
mutate(ML_bot = str_split(X7,"/")[2])
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
mutate(ML_top = sapply(str_split(X7,"/"), function(x) x[[1]])) %>%
mutate(ML_bot = sapply(str_split(X7,"/"), function(x) x[[2]]))
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
mutate(ML_top = as.numeric(sapply(str_split(X7,"/"), function(x) x[[1]]))) %>%
mutate(ML_bot = as.numeric(sapply(str_split(X7,"/"), function(x) x[[2]])))
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
mutate(horse = as.numeric(sapply(str_split(X4,"/"), function(x) x[[1]]))) %>%
mutate(sire = as.numeric(sapply(str_split(X4,"/"), function(x) x[[2]]))) %>%
mutate(trainer = as.numeric(sapply(str_split(X5,"/"), function(x) x[[1]]))) %>%
mutate(jockey = as.numeric(sapply(str_split(X5,"/"), function(x) x[[2]]))) %>%
mutate(ML_top = as.numeric(sapply(str_split(X7,"/"), function(x) x[[1]]))) %>%
mutate(ML_bot = as.numeric(sapply(str_split(X7,"/"), function(x) x[[2]]))) %>%
select(-c(X4,X5,X7)) %>%
select(everything())
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
mutate(horse = as.numeric(sapply(str_split(X4,"/"), function(x) x[[1]]))) %>%
mutate(sire = as.numeric(sapply(str_split(X4,"/"), function(x) x[[2]]))) %>%
mutate(trainer = as.numeric(sapply(str_split(X5,"/"), function(x) x[[1]]))) %>%
mutate(jockey = as.numeric(sapply(str_split(X5,"/"), function(x) x[[2]]))) %>%
mutate(ML_top = as.numeric(sapply(str_split(X7,"/"), function(x) x[[1]]))) %>%
mutate(ML_bot = as.numeric(sapply(str_split(X7,"/"), function(x) x[[2]]))) %>%
select(-c(X4,X5,X7)) %>%
select(-c())
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
mutate(horse = as.numeric(sapply(str_split(X4,"/"), function(x) x[[1]]))) %>%
mutate(sire = as.numeric(sapply(str_split(X4,"/"), function(x) x[[2]]))) %>%
mutate(trainer = as.numeric(sapply(str_split(X5,"/"), function(x) x[[1]]))) %>%
mutate(jockey = as.numeric(sapply(str_split(X5,"/"), function(x) x[[2]]))) %>%
mutate(ML_top = as.numeric(sapply(str_split(X7,"/"), function(x) x[[1]]))) %>%
mutate(ML_bot = as.numeric(sapply(str_split(X7,"/"), function(x) x[[2]]))) %>%
select(-c(X4,X5,X7))
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
mutate(horse = as.numeric(sapply(str_split(X4,"\n"), function(x) x[[1]]))) %>%
mutate(sire = as.numeric(sapply(str_split(X4,"\n"), function(x) x[[2]]))) %>%
mutate(trainer = as.numeric(sapply(str_split(X5,"\n"), function(x) x[[1]]))) %>%
mutate(jockey = as.numeric(sapply(str_split(X5,"\n"), function(x) x[[2]]))) %>%
mutate(ML_top = as.numeric(sapply(str_split(X7,"/"), function(x) x[[1]]))) %>%
mutate(ML_bot = as.numeric(sapply(str_split(X7,"/"), function(x) x[[2]]))) %>%
select(-c(X4,X5,X7))
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
mutate(horse = as.numeric(sapply(str_split(X4,"\n"), function(x) x[[1]]))) %>%
mutate(sire = as.numeric(sapply(str_split(X4,"\n"), function(x) x[[2]]))) %>%
# mutate(trainer = as.numeric(sapply(str_split(X5,"\n"), function(x) x[[1]]))) %>%
# mutate(jockey = as.numeric(sapply(str_split(X5,"\n"), function(x) x[[2]]))) %>%
mutate(ML_top = as.numeric(sapply(str_split(X7,"/"), function(x) x[[1]]))) %>%
mutate(ML_bot = as.numeric(sapply(str_split(X7,"/"), function(x) x[[2]]))) #%>% select(-c(X4,X5,X7))
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
mutate(horse = as.numeric(sapply(str_split(X4,"\n"), function(x) x[[1]])))
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
mutate(horse = as.numeric(sapply(str_split(X4,"\\n"), function(x) x[[1]]))) %>%
mutate(sire  = as.numeric(sapply(str_split(X4,"\n"), function(x) x[[2]]))) %>%
# mutate(trainer = as.numeric(sapply(str_split(X5,"\n"), function(x) x[[1]]))) %>%
# mutate(jockey = as.numeric(sapply(str_split(X5,"\n"), function(x) x[[2]]))) %>%
mutate(ML_top = as.numeric(sapply(str_split(X7,"/"), function(x) x[[1]]))) %>%
mutate(ML_bot = as.numeric(sapply(str_split(X7,"/"), function(x) x[[2]]))) #%>% select(-c(X4,X5,X7))
str_split(RACES[[1]]$X4, "\n")
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
mutate(horse = as.numeric(sapply(str_split(X4,"\n"), function(x) x[1]))) %>%
mutate(sire  = as.numeric(sapply(str_split(X4,"\n"), function(x) x[[2]]))) %>%
# mutate(trainer = as.numeric(sapply(str_split(X5,"\n"), function(x) x[[1]]))) %>%
# mutate(jockey = as.numeric(sapply(str_split(X5,"\n"), function(x) x[[2]]))) %>%
mutate(ML_top = as.numeric(sapply(str_split(X7,"/"), function(x) x[[1]]))) %>%
mutate(ML_bot = as.numeric(sapply(str_split(X7,"/"), function(x) x[[2]]))) #%>% select(-c(X4,X5,X7))
sapply(str_split(RACES[[1]]$X4, "\n"), function(x) x[1])
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
mutate(horse = as.numeric(sapply(str_split(X4,"\n"), function(x) x[1]))) %>%
mutate(sire  = as.numeric(sapply(str_split(X4,"\n"), function(x) x[[2]]))) %>%
# mutate(trainer = as.numeric(sapply(str_split(X5,"\n"), function(x) x[[1]]))) %>%
# mutate(jockey = as.numeric(sapply(str_split(X5,"\n"), function(x) x[[2]]))) %>%
mutate(ML_top = as.numeric(sapply(str_split(X7,"/"), function(x) x[[1]]))) %>%
mutate(ML_bot = as.numeric(sapply(str_split(X7,"/"), function(x) x[[2]]))) #%>% select(-c(X4,X5,X7))
sapply(str_split(RACES[[1]]$X4, "\n"), function(x) x[1])
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
mutate(horse = sapply(str_split(X4,"\n"), function(x) x[[1]])) %>%
mutate(sire  = sapply(str_split(X4,"\n"), function(x) x[[2]])) %>%
# mutate(trainer = sapply(str_split(X5,"\n"), function(x) x[[1]])) %>%
# mutate(jockey = sapply(str_split(X5,"\n"), function(x) x[[2]])) %>%
mutate(ML_top = as.numeric(sapply(str_split(X7,"/"), function(x) x[[1]]))) %>%
mutate(ML_bot = as.numeric(sapply(str_split(X7,"/"), function(x) x[[2]]))) #%>% select(-c(X4,X5,X7))
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
mutate(horse = sapply(str_split(X4,"\n"), function(x) x[[1]])) %>%
mutate(sire  = sapply(str_split(X4,"\n"), function(x) x[[2]])) %>%
mutate(trainer = sapply(str_split(X5,"\n"), function(x) x[[1]])) %>%
mutate(jockey = sapply(str_split(X5,"\n"), function(x) x[[2]])) %>%
mutate(ML_top = as.numeric(sapply(str_split(X7,"/"), function(x) x[[1]]))) %>%
mutate(ML_bot = as.numeric(sapply(str_split(X7,"/"), function(x) x[[2]]))) %>% select(-c(X4,X5,X7))
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
mutate(horse = sapply(str_split(X4,"\n"), function(x) x[[1]])) %>%
mutate(sire  = sapply(str_split(X4,"\n"), function(x) x[[2]])) %>%
mutate(sire = str_remove(sire, "^")) %>%
mutate(trainer = sapply(str_split(X5,"\n"), function(x) x[[1]])) %>%
mutate(jockey = sapply(str_split(X5,"\n"), function(x) x[[2]])) %>%
mutate(ML_top = as.numeric(sapply(str_split(X7,"/"), function(x) x[[1]]))) %>%
mutate(ML_bot = as.numeric(sapply(str_split(X7,"/"), function(x) x[[2]]))) %>% select(-c(X4,X5,X7))
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
mutate(horse = sapply(str_split(X4,"\n"), function(x) x[[1]])) %>%
mutate(sire  = sapply(str_split(X4,"\n"), function(x) x[[2]])) %>%
mutate(sire = str_remove(sire, "^ ")) %>%
mutate(trainer = sapply(str_split(X5,"\n"), function(x) x[[1]])) %>%
mutate(jockey = sapply(str_split(X5,"\n"), function(x) x[[2]])) %>%
mutate(ML_top = as.numeric(sapply(str_split(X7,"/"), function(x) x[[1]]))) %>%
mutate(ML_bot = as.numeric(sapply(str_split(X7,"/"), function(x) x[[2]]))) %>% select(-c(X4,X5,X7))
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
mutate(horse = sapply(str_split(X4,"\n"), function(x) x[[1]])) %>%
mutate(sire  = sapply(str_split(X4,"\n"), function(x) x[[2]])) %>%
mutate(sire = str_remove(sire, "^    ")) %>%
mutate(trainer = sapply(str_split(X5,"\n"), function(x) x[[1]])) %>%
mutate(jockey = sapply(str_split(X5,"\n"), function(x) x[[2]])) %>%
mutate(ML_top = as.numeric(sapply(str_split(X7,"/"), function(x) x[[1]]))) %>%
mutate(ML_bot = as.numeric(sapply(str_split(X7,"/"), function(x) x[[2]]))) %>% select(-c(X4,X5,X7))
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
mutate(horse = sapply(str_split(X4,"\n"), function(x) x[[1]])) %>%
mutate(sire  = sapply(str_split(X4,"\n"), function(x) x[[2]])) %>%
mutate(sire = str_remove(sire, "^       ")) %>%
mutate(trainer = sapply(str_split(X5,"\n"), function(x) x[[1]])) %>%
mutate(jockey = sapply(str_split(X5,"\n"), function(x) x[[2]])) %>%
mutate(ML_top = as.numeric(sapply(str_split(X7,"/"), function(x) x[[1]]))) %>%
mutate(ML_bot = as.numeric(sapply(str_split(X7,"/"), function(x) x[[2]]))) %>% select(-c(X4,X5,X7))
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
mutate(horse = sapply(str_split(X4,"\n"), function(x) x[[1]])) %>%
mutate(sire  = sapply(str_split(X4,"\n"), function(x) x[[2]])) %>%
mutate(sire = str_remove(sire, "^        ")) %>%
mutate(trainer = sapply(str_split(X5,"\n"), function(x) x[[1]])) %>%
mutate(jockey = sapply(str_split(X5,"\n"), function(x) x[[2]])) %>%
mutate(ML_top = as.numeric(sapply(str_split(X7,"/"), function(x) x[[1]]))) %>%
mutate(ML_bot = as.numeric(sapply(str_split(X7,"/"), function(x) x[[2]]))) %>% select(-c(X4,X5,X7))
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
mutate(horse = sapply(str_split(X4,"\n"), function(x) x[[1]])) %>%
mutate(sire  = sapply(str_split(X4,"\n"), function(x) x[[2]])) %>%
mutate(sire = str_remove(sire, "^        ")) %>%
mutate(trainer = sapply(str_split(X5,"\n"), function(x) x[[1]])) %>%
mutate(jockey = sapply(str_split(X5,"\n"), function(x) x[[2]])) %>%
mutate(jockey = str_remove(jockey, "^        ")) %>%
mutate(ML_top = as.numeric(sapply(str_split(X7,"/"), function(x) x[[1]]))) %>%
mutate(ML_bot = as.numeric(sapply(str_split(X7,"/"), function(x) x[[2]]))) %>% select(-c(X4,X5,X7))
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
mutate(horse = sapply(str_split(X4,"\n"), function(x) x[[1]])) %>%
mutate(sire  = sapply(str_split(X4,"\n"), function(x) x[[2]])) %>%
mutate(sire = str_remove(sire, "^        ")) %>%
mutate(trainer = sapply(str_split(X5,"\n"), function(x) x[[1]])) %>%
mutate(jockey = sapply(str_split(X5,"\n"), function(x) x[[2]])) %>%
mutate(jockey = str_remove(jockey, "^        ")) %>%
mutate(ML_top = as.numeric(sapply(str_split(X7,"/"), function(x) x[[1]]))) %>%
mutate(ML_bot = as.numeric(sapply(str_split(X7,"/"), function(x) x[[2]]))) %>%
select(-c(X4,X5,X7)) %>%
mutate(ML = ML_top/ML_bot+1)
RACES[[1]] %>%
select(X2,X4,X5,X7) %>%
rename(PP = X2) %>%
mutate(horse = sapply(str_split(X4,"\n"), function(x) x[[1]])) %>%
mutate(sire  = sapply(str_split(X4,"\n"), function(x) x[[2]])) %>%
mutate(sire = str_remove(sire, "^        ")) %>%
mutate(trainer = sapply(str_split(X5,"\n"), function(x) x[[1]])) %>%
mutate(jockey = sapply(str_split(X5,"\n"), function(x) x[[2]])) %>%
mutate(jockey = str_remove(jockey, "^        ")) %>%
mutate(ML_top = as.numeric(sapply(str_split(X7,"/"), function(x) x[[1]]))) %>%
mutate(ML_bot = as.numeric(sapply(str_split(X7,"/"), function(x) x[[2]]))) %>%
select(-c(X4,X5,X7)) %>%
mutate(ML = ML_top/ML_bot+1) %>% select(-c(ML_bot, ML_top))
source("a2_pick_6_main.R")
version_ = 1
fold_ = 35
num_folds_ = 45
GRID1 = expand.grid(
lambda = seq(0,1,by=0.05),
index_a = 1:nrow(P),
lambda_opp = 0.8
# lambda_opp = c(0.75, 0.8, 0.85, 0.9)
) %>% as_tibble()
GRID1
### hyperparams
ks = sort(unique(c(10^(1:6), 5000, 15000, 25000, 50000, 150000, 250000, 500000, 750000, 1500000, 2e6)))
# ks = 10^(1:8)
ns = ks
# ns = 10^(1:6)
# Cs = c(0,2500,38016,1e5,1e6)
Cs = c(0,38016,1e5)
alphas = c(0, 0.05, 0.18)
print(paste0("version_=",version_))
if (version_ == 1) {
GRID = GRID1
GRID
} else {
stop("this version_ has not yet been implemented")
}
setwd("~/Dropbox/Mac (2)/Desktop/RESEARCH/entropy_ncaa/code_2/horse_racing")
ks
ns
plot_df0 = read_csv("plots/plot_grid_eProfit_v1.csv")
plot_df1 = plot_df0 %>%
### get just one opp. strategy
filter(lambda_opp == 0.8) %>%
### clean the df
select(-c(E_W_ratio, t)) %>%
relocate(C, .before=n) %>%
relocate(alpha, .after=C) %>%
relocate(n, .before=C) %>%
relocate(lambda, .after=n) %>%
relocate(index_a, .after= lambda) %>%
relocate(k, .after=alpha) %>%
relocate(lambda_opp, .after=k) %>%
relocate(E_profit, .after=lambda_opp)
plot_df = plot_df1 %>%
### get max. profit
group_by(C,alpha,k,lambda_opp) %>%
mutate(
max_E_profit = max(E_profit),
argmax_n = n[(which(max_E_profit == E_profit))[1]],
argmax_lambda = lambda[(which(max_E_profit == E_profit))[1]],
argmax_index_a = index_a[(which(max_E_profit == E_profit))[1]]
) %>%
ungroup() %>%
### string descriptors
# mutate(alpha_str = TeX(paste0("$\\alpha$ = ", alpha))) #%>%
mutate(
argmax_n_str = paste0("n=", argmax_n),
argmax_lambda_str = paste0("lambda=", argmax_lambda),
argmax_index_a_str = paste0("idx(a)=", argmax_index_a)
) %>%
# rowwise() %>%
# mutate(argmax_lambda_str = TeX(paste0("$\\lambda$=", argmax_lambda))) %>%
# ungroup() %>%
mutate(n_str = paste0("n = ", n)) %>%
mutate(n_str = fct_reorder(n_str, n)) %>%
mutate(k_str = paste0("k = ", k)) %>%
mutate(k_str = fct_reorder(k_str, k)) %>%
mutate(alpha_str = paste0("alpha = ", alpha)) %>%
mutate(C_str = paste0("C = ", C)) %>%
mutate(C_str = fct_reorder(C_str, C))
plot_df
ns
k=50000
n=25000
plot_eMaxProfit = plot_df %>%
filter(min(k_range) <= k & k <= max(k_range)) %>%
# filter(min(k_range_2) <= k & k <= max(k_range_2)) %>%
select(
C_str,alpha_str,#alpha_str,
lambda_opp,k,
max_E_profit,
argmax_n_str,
argmax_index_a_str,
argmax_lambda_str
) %>%
distinct() %>%
ggplot(aes(x = factor(k))) +
facet_wrap(~alpha_str+C_str, nrow=3) +
xlab("k") +
# ylab(TeX(paste0("expected profit using the best (n,$\\lambda$,index(a)) strategy"))) +
# theme(axis.title.y = element_text(size=18)) +
ylab(TeX(paste0("expected profit using our best strategy"))) +
theme(axis.text.y = element_text(size=12)) +
theme(axis.text.x = element_text(size=12, angle=90)) +
geom_hline(yintercept=0, linetype="dashed", color="gray60", linewidth=1) +
# geom_text(aes(label = argmax_n_str, y=max_E_profit+15), size=3) +
# geom_text(aes(label = argmax_index_a_str, y=max_E_profit+25), size=3) +
# geom_text(aes(label = argmax_lambda_str, y=max_E_profit+35), size=3) +
geom_point(aes(y = max_E_profit), size=4)
k_range_1 = c(5e5, Inf)
k_range_2 = c(1e4,1e5)
k_range_3 = c(1,1e4)
k_ranges = list(k_range_1, k_range_2, k_range_3)
plot_eMaxProfit = plot_df %>%
filter(min(k_range) <= k & k <= max(k_range)) %>%
# filter(min(k_range_2) <= k & k <= max(k_range_2)) %>%
select(
C_str,alpha_str,#alpha_str,
lambda_opp,k,
max_E_profit,
argmax_n_str,
argmax_index_a_str,
argmax_lambda_str
) %>%
distinct() %>%
ggplot(aes(x = factor(k))) +
facet_wrap(~alpha_str+C_str, nrow=3) +
xlab("k") +
# ylab(TeX(paste0("expected profit using the best (n,$\\lambda$,index(a)) strategy"))) +
# theme(axis.title.y = element_text(size=18)) +
ylab(TeX(paste0("expected profit using our best strategy"))) +
theme(axis.text.y = element_text(size=12)) +
theme(axis.text.x = element_text(size=12, angle=90)) +
geom_hline(yintercept=0, linetype="dashed", color="gray60", linewidth=1) +
# geom_text(aes(label = argmax_n_str, y=max_E_profit+15), size=3) +
# geom_text(aes(label = argmax_index_a_str, y=max_E_profit+25), size=3) +
# geom_text(aes(label = argmax_lambda_str, y=max_E_profit+35), size=3) +
geom_point(aes(y = max_E_profit), size=4)
i=1
k_range = k_ranges[[i]]
plot_eMaxProfit = plot_df %>%
filter(min(k_range) <= k & k <= max(k_range)) %>%
# filter(min(k_range_2) <= k & k <= max(k_range_2)) %>%
select(
C_str,alpha_str,#alpha_str,
lambda_opp,k,
max_E_profit,
argmax_n_str,
argmax_index_a_str,
argmax_lambda_str
) %>%
distinct() %>%
ggplot(aes(x = factor(k))) +
facet_wrap(~alpha_str+C_str, nrow=3) +
xlab("k") +
# ylab(TeX(paste0("expected profit using the best (n,$\\lambda$,index(a)) strategy"))) +
# theme(axis.title.y = element_text(size=18)) +
ylab(TeX(paste0("expected profit using our best strategy"))) +
theme(axis.text.y = element_text(size=12)) +
theme(axis.text.x = element_text(size=12, angle=90)) +
geom_hline(yintercept=0, linetype="dashed", color="gray60", linewidth=1) +
# geom_text(aes(label = argmax_n_str, y=max_E_profit+15), size=3) +
# geom_text(aes(label = argmax_index_a_str, y=max_E_profit+25), size=3) +
# geom_text(aes(label = argmax_lambda_str, y=max_E_profit+35), size=3) +
geom_point(aes(y = max_E_profit), size=4)
plot_eMaxProfit
n_range = n_ranges[[i]]
plot_eProfit_vs_n = plot_df %>%
filter(min(n_range) <= n & n <= max(n_range)) %>%
filter(lambda == 1) %>%
filter(alpha == 0.05, C == 38016) %>%
select(
C_str,alpha_str,
lambda_opp,k,k_str,
E_profit,
index_a,n
) %>%
distinct() %>%
ggplot(aes(x = factor(n), y=E_profit, color=factor(index_a))) +
xlab("n") +
labs(title=TeX("$\\lambda = 1, \\alpha = 0.05, C = 38016$"), color="index(a)") +
theme(axis.text.x = element_text(size=12, angle=90)) +
facet_wrap(~k_str) +
geom_hline(yintercept=0, linetype="dashed", color="gray60", linewidth=1) +
geom_point(size=4, alpha=0.7) +
ylab("expected profit")
i=1
n_range_1 = c(5e5, Inf)
n_range_2 = c(1e4,1e5)
n_range_3 = c(1,1e4)
n_ranges = list(n_range_1, n_range_2, n_range_3)
n_range = n_ranges[[i]]
plot_eProfit_vs_n = plot_df %>%
filter(min(n_range) <= n & n <= max(n_range)) %>%
filter(lambda == 1) %>%
filter(alpha == 0.05, C == 38016) %>%
select(
C_str,alpha_str,
lambda_opp,k,k_str,
E_profit,
index_a,n
) %>%
distinct() %>%
ggplot(aes(x = factor(n), y=E_profit, color=factor(index_a))) +
xlab("n") +
labs(title=TeX("$\\lambda = 1, \\alpha = 0.05, C = 38016$"), color="index(a)") +
theme(axis.text.x = element_text(size=12, angle=90)) +
facet_wrap(~k_str) +
geom_hline(yintercept=0, linetype="dashed", color="gray60", linewidth=1) +
geom_point(size=4, alpha=0.7) +
ylab("expected profit")
plot_eProfit_vs_n
n_range_1 = c(5e5, Inf)
n_range_2 = c(1e4,1e5)
n_range_3 = c(1,1e4)
n_ranges = list(n_range_1, n_range_2, n_range_3)
n_range = n_ranges[[i]]
plot_eProfit_vs_indexa = plot_df %>%
filter(min(n_range) <= n & n <= max(n_range)) %>%
filter(lambda == 1) %>%
# filter(alpha == 0.05, C == 38016) %>%
filter(alpha == 0.05, C == C_) %>%
# filter(k <= 50000) %>%
select(
C_str,alpha_str,#alpha_str,
lambda_opp,k,k_str,
E_profit,
index_a,n
) %>%
distinct() %>%
ggplot(aes(x = factor(index_a), y=E_profit, color=factor(n))) +
xlab("index(a)") +
labs(title=TeX(paste0("$\\lambda = 1, \\alpha = 0.05,$ C = ", C_)), color="n") +
# ggplot(aes(x = factor(n), y=E_profit, color=factor(index_a))) +
# xlab("n") +
# labs(title=TeX("$\\lambda = 1, \\alpha = 0.05, C = 38016$"), color="index(a)") +
theme(axis.text.x = element_text(size=12)) +
facet_wrap(~k_str) +
geom_hline(yintercept=0, linetype="dashed", color="gray60", linewidth=1) +
geom_point(size=4, alpha=0.7) +
ylab("expected profit")
C_=38k
C_=38000
n_range = n_ranges[[i]]
plot_eProfit_vs_indexa = plot_df %>%
filter(min(n_range) <= n & n <= max(n_range)) %>%
filter(lambda == 1) %>%
# filter(alpha == 0.05, C == 38016) %>%
filter(alpha == 0.05, C == C_) %>%
# filter(k <= 50000) %>%
select(
C_str,alpha_str,#alpha_str,
lambda_opp,k,k_str,
E_profit,
index_a,n
) %>%
distinct() %>%
ggplot(aes(x = factor(index_a), y=E_profit, color=factor(n))) +
xlab("index(a)") +
labs(title=TeX(paste0("$\\lambda = 1, \\alpha = 0.05,$ C = ", C_)), color="n") +
# ggplot(aes(x = factor(n), y=E_profit, color=factor(index_a))) +
# xlab("n") +
# labs(title=TeX("$\\lambda = 1, \\alpha = 0.05, C = 38016$"), color="index(a)") +
theme(axis.text.x = element_text(size=12)) +
facet_wrap(~k_str) +
geom_hline(yintercept=0, linetype="dashed", color="gray60", linewidth=1) +
geom_point(size=4, alpha=0.7) +
ylab("expected profit")
plot_eProfit_vs_indexa
unique(plot_df$C)
C_=38016
n_range = n_ranges[[i]]
plot_eProfit_vs_indexa = plot_df %>%
filter(min(n_range) <= n & n <= max(n_range)) %>%
filter(lambda == 1) %>%
# filter(alpha == 0.05, C == 38016) %>%
filter(alpha == 0.05, C == C_) %>%
# filter(k <= 50000) %>%
select(
C_str,alpha_str,#alpha_str,
lambda_opp,k,k_str,
E_profit,
index_a,n
) %>%
distinct() %>%
ggplot(aes(x = factor(index_a), y=E_profit, color=factor(n))) +
xlab("index(a)") +
labs(title=TeX(paste0("$\\lambda = 1, \\alpha = 0.05,$ C = ", C_)), color="n") +
# ggplot(aes(x = factor(n), y=E_profit, color=factor(index_a))) +
# xlab("n") +
# labs(title=TeX("$\\lambda = 1, \\alpha = 0.05, C = 38016$"), color="index(a)") +
theme(axis.text.x = element_text(size=12)) +
facet_wrap(~k_str) +
geom_hline(yintercept=0, linetype="dashed", color="gray60", linewidth=1) +
geom_point(size=4, alpha=0.7) +
ylab("expected profit")
plot_eProfit_vs_indexa
